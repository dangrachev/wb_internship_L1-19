const vkWidgetPosts = document.querySelector('.vk-widget_posts');

// –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const _token = window.location.hash.split("=")[1].split("&")[0]

const community_id = 136363489;

// –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
let community;

// –ú–∞—Å—Å–∏–≤ –ø–æ—Å—Ç–æ–≤ –¥–ª—è localstorage
let posts = [];
// –ö–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤ –ø–æ–¥–≥—Ä—É–∂–∞–µ–º—ã—Ö –ø–æ—Å—Ç–æ–≤ –∑–∞ —Ä–∞–∑
const postsPerTime = 10;

// –°–º–µ—â–µ–Ω–∏–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –≤—ã–±–æ—Ä–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π.
let offset = 0;


// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ (–±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ñ–æ—Ç–∫—É)
function getVKCommunity() {
    if (!localStorage.getItem('community')) {
        VK.Api.call('groups.getById', {
            access_token: _token,
            group_id: community_id,
            v: 5.131
        }, (res) => {
            if (res.response) {
                community = {
                    name: res.response[0].name,
                    img: res.response[0].photo_100
                };
                localStorage.setItem('community', JSON.stringify(community));
            }
        });
    } else {
        community = JSON.parse(localStorage.getItem('community'));
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ—Å—Ç—ã —Å VK api
function getVKPosts() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Open api –∏ VK.Api.call –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–æ–≤ VK api
    VK.Api.call('wall.get', {
            access_token: _token,
            owner_id: -Math.abs(community_id),
            domain: 'dangrachev',
            count: postsPerTime,
            offset: offset,
            v: 5.131
        },
        (res) => {
            if (res.response) {
                const newPosts = res.response.items;

                // –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ newPosts –∏ —Å–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞
                const html = newPosts.map((post) => `
                  <div class="vk-widget_post">
                    <div class="vk-widget_community-info">
                        <div class="vk-widget_community-img">
                            <img src=${community.img} />
                        </div>
                        <div>
                            <div class="vk-widget_community-name">${community.name}</div>
                            <div class="vk-widget_post-date">${new Date(post.date * 1000).toLocaleDateString()}</div>
                        </div>
                    </div>
                    
                    <div class="vk-widget_post-content">
                        <div class="vk-widget_post-message">${post.text}</div>
                        
                        <div class="vk-widget_post-media">
                            <img class="vk-widget_post-img" src=${post.attachments[0]['photo']?.sizes[4].url} />
                        </div>
                    </div>
                    
                    <div class="vk-widget_post-info">
                        <div>
                            <span>‚ù§ ${post.likes.count}</span>
                            <span>üí¨ ${post.comments.count}</span>
                            <span>‚Æå ${post.reposts.count}</span>
                        </div>
                        
                        <div>
                            <span>üëÅ ${post.views.count}</span> 
                        </div>
                    </div>
                  </div>
                `).join('');

                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã
                vkWidgetPosts.insertAdjacentHTML('beforeend', html);

                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –∫ —É–∂–µ –ø–æ–¥–≥—Ä—É–∂–µ–Ω–Ω—ã–º
                posts = [...posts, ...newPosts];

                // –ú–µ–Ω—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ
                offset = offset + postsPerTime;

                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª–µ–∂–∫—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
                const lastPost = document.querySelector('.vk-widget_post:last-child');
                observer.observe(lastPost);
            }
        });
}


// –ò—Å–ø–æ–ª—å–∑—É–µ–º Intersection Observer API –¥–ª—è —Å–ª–µ–∂–∫–∏ –∑–∞ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞
const observer = new IntersectionObserver(posts => {
    posts.forEach(post => {
        if (post.isIntersecting) {
            // –ï—Å–ª–∏ –ø–µ—Ä–µ—Å–µ–∫–∞–µ–º—ã–π –ø–æ—Å—Ç —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–±–ª—é–¥–∞–µ–º—ã–º, –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã
            getVKPosts();
        }
    });
});

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å—Ç—ã –≤ localstorage
function savePostsToLocalstorage() {
    localStorage.setItem('posts', JSON.stringify(posts));
    localStorage.setItem('offset', offset);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
function getCachedPosts() {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã –∏ —Å–µ–º–µ—â–µ–Ω–∏–µ
    const cachedPosts = localStorage.getItem('posts');
    const cachedOffset = localStorage.getItem('offset');

    if (cachedPosts) {
        posts = JSON.parse(cachedPosts);
        offset = cachedOffset ? parseInt(cachedOffset) : 0;

        const html = posts.map((post) => `
            <div class="vk-widget_post">
                <div class="vk-widget_community-info">
                    <div class="vk-widget_community-img">
                        <img src=${community.img} />
                    </div>
                    
                    <div class="vk-widget_community-name">${community.name}</div>
                    <div class="vk-widget_post-date">${new Date(post.date * 1000).toLocaleDateString()}</div>
                </div>
                
                <div class="vk-widget_post-content">
                    <div class="vk-widget_post-message">${post.text}</div>
                    
                    <div class="vk-widget_post-media">
                        ${post.attachments[0]['photo']} && 
                            <img class="vk-widget_post-img" src=${post.attachments[0]['photo']?.sizes[4].url} />
                    </div>
                </div>
                
                <div class="vk-widget_post-info">
                    <div>
                        <span>‚ù§ ${post.likes.count}</span>
                        <span>üí¨ ${post.comments.count}</span>
                        <span>‚Æå ${post.reposts.count}</span>
                    </div>
                    
                    <div>
                        <span>üëÅ ${post.views.count}</span> 
                    </div>
                </div>
            </div>
          `).join('');

        vkWidgetPosts.insertAdjacentHTML('beforeend', html);
    }
}


// –ü—Ä–∏ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–∏ localStorage, –≤—ã—Ç–µ—Å–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ—Å—Ç—ã –Ω–æ–≤—ã–º–∏
function postsReplacement(endIndex) {
    // –û–±—Ä–µ–∑–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–æ—Å—Ç–æ–≤, –æ—Å—Ç–∞–≤–ª—è—è –Ω–æ–≤—ã–µ
    posts.splice(0, endIndex);

    const html = posts.map((post) => `
          <div class="vk-widget_post">
                <div class="vk-widget_community-info">
                    <div class="vk-widget_community-img">
                        <img src=${community.img} />
                    </div>
                    
                    <div class="vk-widget_community-name">${community.name}</div>
                    <div class="vk-widget_post-date">${new Date(post.date * 1000).toLocaleDateString()}</div>
                </div>
                
                <div class="vk-widget_post-content">
                    <div class="vk-widget_post-message">${post.text}</div>
                    
                    <div class="vk-widget_post-media">
                        ${post.attachments[0]['photo']} && 
                            <img class="vk-widget_post-img" src=${post.attachments[0]['photo']?.sizes[4].url} />
                    </div>
                </div>
                
                <div class="vk-widget_post-info">
                    <div>
                        <span>‚ù§ ${post.likes.count}</span>
                        <span>üí¨ ${post.comments.count}</span>
                        <span>‚Æå ${post.reposts.count}</span>
                    </div>
                    
                    <div>
                        <span>üëÅ ${post.views.count}</span> 
                    </div>
                </div>
          </div>
        `).join('');

    vkWidgetPosts.innerHTML = html;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –Ω–∞ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ
function checkLocalStorage() {
    const size = JSON.stringify(posts).length;

    // –ü—Ä–∏–º–µ—Ä–Ω—ã–π –æ–±—ä–µ–º localstorage –≤ chrome, –≤–∑—è—Ç –∏–∑ 18 –∑–∞–¥–∞–Ω–∏—è
    if (size > 4194304) {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å —Å–µ—Ä–µ–¥–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞ –ø–æ—Å—Ç–æ–≤
        const endIndex = Math.round(posts.length / 2);

        // –í—ã—Ç–µ—Å–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ—Å—Ç—ã
        postsReplacement(endIndex);

        // –ö—ç—à–∏—Ä—É–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–æ—Å—Ç—ã
        savePostsToLocalstorage();
    }
}

function initWidget() {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—É –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ
    getVKCommunity();

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã –∏–∑ localstorage, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –∏–ª–∏ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    getCachedPosts();

    // –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
    getVKPosts();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 2 —Å–µ–∫
    setInterval(checkLocalStorage, 2000);
}
initWidget();
